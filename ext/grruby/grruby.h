#ifndef GRRUBY_H
#define GRRUBY_H

#include <ruby.h>
#include <gr.h>

double* rb_ar_2_dbl_ar(VALUE);
int* rb_ar_2_int_ar(VALUE);
static VALUE opengks(VALUE);
static VALUE closegks(VALUE);
static VALUE inqdspsize(VALUE,VALUE,VALUE,VALUE,VALUE);
static VALUE openws(VALUE,VALUE,VALUE,VALUE);
static VALUE closews(VALUE,VALUE);
static VALUE activatews(VALUE,VALUE);
static VALUE deactivatews(VALUE,VALUE);
static VALUE clearws(VALUE);
static VALUE updatews(VALUE);
static VALUE polyline(VALUE,VALUE,VALUE);
static VALUE polymarker(VALUE,VALUE,VALUE);
static VALUE text(VALUE,VALUE,VALUE,VALUE);
static VALUE inqtext(VALUE,VALUE,VALUE,VALUE,VALUE,VALUE);
static VALUE fillarea(VALUE,VALUE,VALUE);
static VALUE cellarray(VALUE,VALUE,VALUE,VALUE,VALUE,VALUE,VALUE,VALUE,VALUE,VALUE,VALUE,VALUE);
static VALUE gdp(VALUE,VALUE,VALUE,VALUE,VALUE,VALUE,VALUE);
static VALUE spline(VALUE,VALUE,VALUE,VALUE,VALUE,VALUE);
static VALUE gridit(VALUE,VALUE,VALUE,VALUE,VALUE,VALUE,VALUE,VALUE,VALUE,VALUE);
static VALUE setlinetype(VALUE,VALUE);
static VALUE inqlinetype(VALUE,VALUE);
static VALUE setlinewidth(VALUE,VALUE);
static VALUE inqlinewidth(VALUE,VALUE);
static VALUE setlinecolorind(VALUE,VALUE);
static VALUE inqlinecolorind(VALUE,VALUE);
static VALUE setmarkertype(VALUE,VALUE);
static VALUE inqmarkertype(VALUE,VALUE);
static VALUE setmarkersize(VALUE,VALUE);
static VALUE setmarkercolorind(VALUE,VALUE);
static VALUE inqmarkercolorind(VALUE,VALUE);
static VALUE settextfontprec(VALUE,VALUE,VALUE);
static VALUE setcharexpan(VALUE,VALUE);
static VALUE setcharspace(VALUE,VALUE);
static VALUE settextcolorind(VALUE,VALUE);
static VALUE setcharheight(VALUE,VALUE);
static VALUE setcharup(VALUE,VALUE,VALUE);
static VALUE settextpath(VALUE,VALUE);
static VALUE settextalign(VALUE,VALUE,VALUE);
static VALUE setfillintstyle(VALUE,VALUE);
static VALUE setfillstyle(VALUE,VALUE);
static VALUE setfillcolorind(VALUE,VALUE);
static VALUE setcolorrep(VALUE,VALUE,VALUE,VALUE,VALUE);
static VALUE setwindow(VALUE,VALUE,VALUE,VALUE,VALUE);
static VALUE inqwindow(VALUE,VALUE,VALUE,VALUE,VALUE);
static VALUE setviewport(VALUE,VALUE,VALUE,VALUE,VALUE);
static VALUE inqviewport(VALUE,VALUE,VALUE,VALUE,VALUE);
static VALUE selntran(VALUE,VALUE);
static VALUE setclip(VALUE,VALUE);
static VALUE setwswindow(VALUE,VALUE,VALUE,VALUE,VALUE);
static VALUE setwsviewport(VALUE,VALUE,VALUE,VALUE,VALUE);
static VALUE createseg(VALUE,VALUE);
static VALUE copysegws(VALUE,VALUE);
static VALUE redrawsegws(VALUE);
static VALUE setsegtran(VALUE,VALUE,VALUE,VALUE,VALUE,VALUE,VALUE,VALUE,VALUE);
static VALUE closeseg(VALUE);
static VALUE emergencyclosegks(VALUE);
static VALUE updategks(VALUE);
static VALUE setspace(VALUE,VALUE,VALUE,VALUE,VALUE);
static VALUE inqspace(VALUE,VALUE,VALUE,VALUE,VALUE);
static VALUE setscale(VALUE,VALUE);
static VALUE inqscale(VALUE,VALUE);
static VALUE textext(VALUE,VALUE,VALUE,VALUE);
static VALUE inqtextext(VALUE,VALUE,VALUE,VALUE,VALUE,VALUE);
static VALUE axes(VALUE,VALUE,VALUE,VALUE,VALUE,VALUE,VALUE,VALUE);
static VALUE grid(VALUE,VALUE,VALUE,VALUE,VALUE,VALUE,VALUE);
static VALUE grid3d(VALUE,VALUE,VALUE,VALUE,VALUE,VALUE,VALUE,VALUE,VALUE,VALUE);
static VALUE verrorbars(VALUE,VALUE,VALUE,VALUE,VALUE);
static VALUE herrorbars(VALUE,VALUE,VALUE,VALUE,VALUE);
static VALUE polyline3d(VALUE,VALUE,VALUE,VALUE);
static VALUE polymarker3d(VALUE,VALUE,VALUE,VALUE);
static VALUE axes3d(VALUE,VALUE,VALUE,VALUE,VALUE,VALUE,VALUE,VALUE,VALUE,VALUE,VALUE);
static VALUE titles3d(VALUE,VALUE,VALUE,VALUE);
static VALUE surface(VALUE,VALUE,VALUE,VALUE,VALUE);
static VALUE contour(VALUE,VALUE,VALUE,VALUE,VALUE,VALUE);
static VALUE tricontour(VALUE,VALUE,VALUE,VALUE,VALUE,VALUE,VALUE);
static VALUE hexbin(VALUE,VALUE,VALUE,VALUE,VALUE);
static VALUE setcolormap(VALUE,VALUE);
static VALUE inqcolormap(VALUE,VALUE);
static VALUE colorbar(VALUE);
static VALUE inqcolor(VALUE,VALUE,VALUE);
static VALUE inqcolorfromrgb(VALUE,VALUE,VALUE,VALUE);
static VALUE hsvtorgb(VALUE,VALUE,VALUE,VALUE,VALUE,VALUE,VALUE);
static VALUE tick(VALUE,VALUE,VALUE);
static VALUE validaterange(VALUE,VALUE,VALUE);
static VALUE adjustlimits(VALUE,VALUE,VALUE);
static VALUE adjustrange(VALUE,VALUE,VALUE);
static VALUE beginprint(VALUE,VALUE);
static VALUE beginprintext(VALUE,VALUE,VALUE,VALUE,VALUE);
static VALUE endprint(VALUE);
static VALUE ndctowc(VALUE,VALUE,VALUE);
static VALUE wctondc(VALUE,VALUE,VALUE);
static VALUE wc3towc(VALUE,VALUE,VALUE,VALUE);
static VALUE drawrect(VALUE,VALUE,VALUE,VALUE,VALUE);
static VALUE fillrect(VALUE,VALUE,VALUE,VALUE,VALUE);
static VALUE drawarc(VALUE,VALUE,VALUE,VALUE,VALUE,VALUE,VALUE);
static VALUE fillarc(VALUE,VALUE,VALUE,VALUE,VALUE,VALUE,VALUE);
static VALUE setarrowstyle(VALUE,VALUE);
static VALUE setarrowsize(VALUE,VALUE);
static VALUE drawarrow(VALUE,VALUE,VALUE,VALUE,VALUE);
static VALUE drawimage(VALUE,VALUE,VALUE,VALUE,VALUE,VALUE,VALUE,VALUE,VALUE);
static VALUE importgraphics(VALUE,VALUE);
static VALUE setshadow(VALUE,VALUE,VALUE,VALUE);
static VALUE settransparency(VALUE,VALUE);
static VALUE begingraphics(VALUE,VALUE);
static VALUE endgraphics(VALUE);
static VALUE getgraphics(VALUE);
static VALUE drawgraphics(VALUE,VALUE);
static VALUE mathtex(VALUE,VALUE,VALUE,VALUE);
static VALUE inqmathtex(VALUE,VALUE,VALUE,VALUE,VALUE,VALUE);
static VALUE beginselection(VALUE,VALUE,VALUE);
static VALUE endselection(VALUE);
static VALUE moveselection(VALUE,VALUE,VALUE);
static VALUE resizeselection(VALUE,VALUE,VALUE,VALUE);
static VALUE inqbbox(VALUE,VALUE,VALUE,VALUE,VALUE);
static VALUE precision(VALUE);
static VALUE setregenflags(VALUE,VALUE);
static VALUE inqregenflags(VALUE);
static VALUE savestate(VALUE);
static VALUE restorestate(VALUE);
static VALUE selectcontext(VALUE,VALUE);
static VALUE destroycontext(VALUE,VALUE);
static VALUE uselinespec(VALUE,VALUE);
static VALUE trisurface(VALUE,VALUE,VALUE,VALUE);
static VALUE gradient(VALUE,VALUE,VALUE,VALUE,VALUE,VALUE,VALUE,VALUE);
static VALUE quiver(VALUE,VALUE,VALUE,VALUE,VALUE,VALUE,VALUE,VALUE);
static VALUE version(VALUE);

#endif /* GRRUBY_H */
